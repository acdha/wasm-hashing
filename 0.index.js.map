{"version":3,"sources":["webpack:///./wasm_hashing.js","webpack:///./node_modules/util/util.js","webpack:///./node_modules/util/support/isBufferBrowser.js"],"names":["_wasm_hashing_bg__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","cachegetUint8Memory","getUint8Memory","buffer","Uint8Array","passArray8ToWasm","arg","ptr","length","set","cachedDecoder","self","TextDecoder","getStringFromWasm","len","decode","subarray","cachedGlobalArgumentPtr","globalArgumentPtr","cachegetUint32Memory","getUint32Memory","Uint32Array","hash_sha1","arg0","ptr0","len0","retptr","mem","realRet","slice","hash_sha2_256","hash_sha2_512","hash_sha3_256","hash_sha3_512","ConstructorToken","[object Object]","this","Sha1Hasher","args","instance","new","__construct","Sha3_256Hasher","Sha2_256Hasher","Sha2_512Hasher","Sha3_512Hasher","slab","slab_next","addHeapObject","obj","push","idx","next","cnt","stack","getObject","__wbindgen_object_clone_ref","__wbindgen_object_drop_ref","i","dropRef","__wbindgen_string_new","p","l","__wbindgen_number_new","__wbindgen_number_get","n","invalid","__wbindgen_undefined_new","undefined","__wbindgen_null_new","__wbindgen_is_null","__wbindgen_is_undefined","__wbindgen_boolean_new","v","__wbindgen_boolean_get","__wbindgen_symbol_new","a","Symbol","__wbindgen_is_symbol","cachedEncoder","TextEncoder","__wbindgen_string_get","len_ptr","buf","encode","passStringToWasm","__wbindgen_throw","Error","global","process","formatRegExp","exports","format","f","isString","objects","arguments","inspect","join","str","String","replace","x","Number","JSON","stringify","_","isNull","isObject","deprecate","fn","msg","isUndefined","apply","noDeprecation","warned","throwDeprecation","traceDeprecation","console","trace","error","debugEnviron","debugs","opts","ctx","seen","stylize","stylizeNoColor","depth","colors","isBoolean","showHidden","_extend","customInspect","stylizeWithColor","formatValue","styleType","style","styles","value","recurseTimes","isFunction","constructor","prototype","ret","primitive","simple","isNumber","formatPrimitive","keys","Object","visibleKeys","array","hash","forEach","val","arrayToHash","getOwnPropertyNames","isError","indexOf","formatError","name","isRegExp","RegExp","toString","call","isDate","Date","output","base","braces","isArray","toUTCString","hasOwnProperty","formatProperty","key","match","formatArray","map","pop","reduce","prev","cur","numLinesEst","reduceToSingleString","desc","getOwnPropertyDescriptor","get","split","line","substr","ar","Array","re","objectToString","d","e","o","pad","debuglog","env","NODE_DEBUG","toUpperCase","test","pid","bold","italic","underline","inverse","white","grey","black","blue","cyan","green","magenta","red","yellow","special","number","boolean","null","string","date","regexp","isNullOrUndefined","isSymbol","isPrimitive","isBuffer","months","prop","log","time","getHours","getMinutes","getSeconds","getDate","getMonth","timestamp","inherits","origin","add","module","copy","fill","readUInt8"],"mappings":"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","file":"0.index.js","sourcesContent":["/* tslint:disable */\nimport * as wasm from './wasm_hashing_bg';\n\nlet cachegetUint8Memory = null;\nfunction getUint8Memory() {\n    if (cachegetUint8Memory === null ||\n        cachegetUint8Memory.buffer !== wasm.memory.buffer)\n        cachegetUint8Memory = new Uint8Array(wasm.memory.buffer);\n    return cachegetUint8Memory;\n}\n\nlet cachegetUint64Memory = null;\nfunction getUint64Memory() {\n    if (cachegetUint64Memory === null ||\n        cachegetUint64Memory.buffer !== wasm.memory.buffer)\n        cachegetUint64Memory = new BigUint64Array(wasm.memory.buffer);\n    return cachegetUint64Memory;\n}\n\nfunction passArray8ToWasm(arg) {\n    const ptr = wasm.__wbindgen_malloc(arg.length * 1);\n    getUint8Memory().set(arg, ptr / 1);\n    return [ptr, arg.length];\n}\n\nconst TextDecoder = typeof self === 'object' && self.TextDecoder\n    ? self.TextDecoder\n    : require('util').TextDecoder;\n\nlet cachedDecoder = new TextDecoder('utf-8');\n\nfunction getStringFromWasm(ptr, len) {\n    return cachedDecoder.decode(getUint8Memory().subarray(ptr, ptr + len));\n}\n\nlet cachedGlobalArgumentPtr = null;\nfunction globalArgumentPtr() {\n    if (cachedGlobalArgumentPtr === null)\n        cachedGlobalArgumentPtr = wasm.__wbindgen_global_argument_ptr();\n    return cachedGlobalArgumentPtr;\n}\n\nlet cachegetUint32Memory = null;\nfunction getUint32Memory() {\n    if (cachegetUint32Memory === null ||\n        cachegetUint32Memory.buffer !== wasm.memory.buffer)\n        cachegetUint32Memory = new Uint32Array(wasm.memory.buffer);\n    return cachegetUint32Memory;\n}\n\nexport function hash_sha1(arg0) {\n    const [ptr0, len0] = passArray8ToWasm(arg0);\n    const retptr = globalArgumentPtr();\n    try {\n        wasm.hash_sha1(retptr, ptr0, len0);\n        const mem = getUint32Memory();\n        const ptr = mem[retptr / 4];\n        const len = mem[retptr / 4 + 1];\n        const realRet = getStringFromWasm(ptr, len).slice();\n        wasm.__wbindgen_free(ptr, len * 1);\n        return realRet;\n    } finally {\n        wasm.__wbindgen_free(ptr0, len0 * 1);\n    }\n}\n\nexport function hash_sha2_256(arg0) {\n    const [ptr0, len0] = passArray8ToWasm(arg0);\n    const retptr = globalArgumentPtr();\n    try {\n        wasm.hash_sha2_256(retptr, ptr0, len0);\n        const mem = getUint32Memory();\n        const ptr = mem[retptr / 4];\n        const len = mem[retptr / 4 + 1];\n        const realRet = getStringFromWasm(ptr, len).slice();\n        wasm.__wbindgen_free(ptr, len * 1);\n        return realRet;\n    } finally {\n        wasm.__wbindgen_free(ptr0, len0 * 1);\n    }\n}\n\nexport function hash_sha2_512(arg0) {\n    const [ptr0, len0] = passArray8ToWasm(arg0);\n    const retptr = globalArgumentPtr();\n    try {\n        wasm.hash_sha2_512(retptr, ptr0, len0);\n        const mem = getUint32Memory();\n        const ptr = mem[retptr / 4];\n        const len = mem[retptr / 4 + 1];\n        const realRet = getStringFromWasm(ptr, len).slice();\n        wasm.__wbindgen_free(ptr, len * 1);\n        return realRet;\n    } finally {\n        wasm.__wbindgen_free(ptr0, len0 * 1);\n    }\n}\n\nexport function hash_sha3_256(arg0) {\n    const [ptr0, len0] = passArray8ToWasm(arg0);\n    const retptr = globalArgumentPtr();\n    try {\n        wasm.hash_sha3_256(retptr, ptr0, len0);\n        const mem = getUint32Memory();\n        const ptr = mem[retptr / 4];\n        const len = mem[retptr / 4 + 1];\n        const realRet = getStringFromWasm(ptr, len).slice();\n        wasm.__wbindgen_free(ptr, len * 1);\n        return realRet;\n    } finally {\n        wasm.__wbindgen_free(ptr0, len0 * 1);\n    }\n}\n\nexport function hash_sha3_512(arg0) {\n    const [ptr0, len0] = passArray8ToWasm(arg0);\n    const retptr = globalArgumentPtr();\n    try {\n        wasm.hash_sha3_512(retptr, ptr0, len0);\n        const mem = getUint32Memory();\n        const ptr = mem[retptr / 4];\n        const len = mem[retptr / 4 + 1];\n        const realRet = getStringFromWasm(ptr, len).slice();\n        wasm.__wbindgen_free(ptr, len * 1);\n        return realRet;\n    } finally {\n        wasm.__wbindgen_free(ptr0, len0 * 1);\n    }\n}\n\nclass ConstructorToken {\n    constructor(ptr) {\n        this.ptr = ptr;\n    }\n}\n\nexport class Sha1Hasher {\n\n                static __construct(ptr) {\n                    return new Sha1Hasher(new ConstructorToken(ptr));\n                }\n\n                constructor(...args) {\n                    if (args.length === 1 && args[0] instanceof ConstructorToken) {\n                        this.ptr = args[0].ptr;\n                        return;\n                    }\n\n                    // This invocation of new will call this constructor with a ConstructorToken\n                    let instance = Sha1Hasher.new(...args);\n                    this.ptr = instance.ptr;\n                }\n            free() {\n                const ptr = this.ptr;\n                this.ptr = 0;\n                wasm.__wbg_sha1hasher_free(ptr);\n            }\n        static new() {\n    return Sha1Hasher.__construct(wasm.sha1hasher_new());\n}\nupdate(arg0) {\n    const [ptr0, len0] = passArray8ToWasm(arg0);\n    try {\n        return wasm.sha1hasher_update(this.ptr, ptr0, len0);\n    } finally {\n        wasm.__wbindgen_free(ptr0, len0 * 1);\n    }\n}\nhex_digest() {\n    const retptr = globalArgumentPtr();\n    wasm.sha1hasher_hex_digest(retptr, this.ptr);\n    const mem = getUint32Memory();\n    const ptr = mem[retptr / 4];\n    const len = mem[retptr / 4 + 1];\n    const realRet = getStringFromWasm(ptr, len).slice();\n    wasm.__wbindgen_free(ptr, len * 1);\n    return realRet;\n}\n}\n\nexport class Sha3_256Hasher {\n\n                static __construct(ptr) {\n                    return new Sha3_256Hasher(new ConstructorToken(ptr));\n                }\n\n                constructor(...args) {\n                    if (args.length === 1 && args[0] instanceof ConstructorToken) {\n                        this.ptr = args[0].ptr;\n                        return;\n                    }\n\n                    // This invocation of new will call this constructor with a ConstructorToken\n                    let instance = Sha3_256Hasher.new(...args);\n                    this.ptr = instance.ptr;\n                }\n            free() {\n                const ptr = this.ptr;\n                this.ptr = 0;\n                wasm.__wbg_sha3_256hasher_free(ptr);\n            }\n        static new() {\n    return Sha3_256Hasher.__construct(wasm.sha3_256hasher_new());\n}\nupdate(arg0) {\n    const [ptr0, len0] = passArray8ToWasm(arg0);\n    try {\n        return wasm.sha3_256hasher_update(this.ptr, ptr0, len0);\n    } finally {\n        wasm.__wbindgen_free(ptr0, len0 * 1);\n    }\n}\nhex_digest() {\n    const retptr = globalArgumentPtr();\n    wasm.sha3_256hasher_hex_digest(retptr, this.ptr);\n    const mem = getUint32Memory();\n    const ptr = mem[retptr / 4];\n    const len = mem[retptr / 4 + 1];\n    const realRet = getStringFromWasm(ptr, len).slice();\n    wasm.__wbindgen_free(ptr, len * 1);\n    return realRet;\n}\n}\n\nexport class Sha2_256Hasher {\n\n                static __construct(ptr) {\n                    return new Sha2_256Hasher(new ConstructorToken(ptr));\n                }\n\n                constructor(...args) {\n                    if (args.length === 1 && args[0] instanceof ConstructorToken) {\n                        this.ptr = args[0].ptr;\n                        return;\n                    }\n\n                    // This invocation of new will call this constructor with a ConstructorToken\n                    let instance = Sha2_256Hasher.new(...args);\n                    this.ptr = instance.ptr;\n                }\n            free() {\n                const ptr = this.ptr;\n                this.ptr = 0;\n                wasm.__wbg_sha2_256hasher_free(ptr);\n            }\n        static new() {\n    return Sha2_256Hasher.__construct(wasm.sha2_256hasher_new());\n}\nupdate(arg0) {\n    const [ptr0, len0] = passArray8ToWasm(arg0);\n    try {\n        return wasm.sha2_256hasher_update(this.ptr, ptr0, len0);\n    } finally {\n        wasm.__wbindgen_free(ptr0, len0 * 1);\n    }\n}\nhex_digest() {\n    const retptr = globalArgumentPtr();\n    wasm.sha2_256hasher_hex_digest(retptr, this.ptr);\n    const mem = getUint32Memory();\n    const ptr = mem[retptr / 4];\n    const len = mem[retptr / 4 + 1];\n    const realRet = getStringFromWasm(ptr, len).slice();\n    wasm.__wbindgen_free(ptr, len * 1);\n    return realRet;\n}\n}\n\nexport class Sha2_512Hasher {\n\n                static __construct(ptr) {\n                    return new Sha2_512Hasher(new ConstructorToken(ptr));\n                }\n\n                constructor(...args) {\n                    if (args.length === 1 && args[0] instanceof ConstructorToken) {\n                        this.ptr = args[0].ptr;\n                        return;\n                    }\n\n                    // This invocation of new will call this constructor with a ConstructorToken\n                    let instance = Sha2_512Hasher.new(...args);\n                    this.ptr = instance.ptr;\n                }\n            free() {\n                const ptr = this.ptr;\n                this.ptr = 0;\n                wasm.__wbg_sha2_512hasher_free(ptr);\n            }\n        static new() {\n    return Sha2_512Hasher.__construct(wasm.sha2_512hasher_new());\n}\nupdate(arg0) {\n    const [ptr0, len0] = passArray8ToWasm(arg0);\n    try {\n        return wasm.sha2_512hasher_update(this.ptr, ptr0, len0);\n    } finally {\n        wasm.__wbindgen_free(ptr0, len0 * 1);\n    }\n}\nhex_digest() {\n    const retptr = globalArgumentPtr();\n    wasm.sha2_512hasher_hex_digest(retptr, this.ptr);\n    const mem = getUint32Memory();\n    const ptr = mem[retptr / 4];\n    const len = mem[retptr / 4 + 1];\n    const realRet = getStringFromWasm(ptr, len).slice();\n    wasm.__wbindgen_free(ptr, len * 1);\n    return realRet;\n}\n}\n\nexport class Sha3_512Hasher {\n\n                static __construct(ptr) {\n                    return new Sha3_512Hasher(new ConstructorToken(ptr));\n                }\n\n                constructor(...args) {\n                    if (args.length === 1 && args[0] instanceof ConstructorToken) {\n                        this.ptr = args[0].ptr;\n                        return;\n                    }\n\n                    // This invocation of new will call this constructor with a ConstructorToken\n                    let instance = Sha3_512Hasher.new(...args);\n                    this.ptr = instance.ptr;\n                }\n            free() {\n                const ptr = this.ptr;\n                this.ptr = 0;\n                wasm.__wbg_sha3_512hasher_free(ptr);\n            }\n        static new() {\n    return Sha3_512Hasher.__construct(wasm.sha3_512hasher_new());\n}\nupdate(arg0) {\n    const [ptr0, len0] = passArray8ToWasm(arg0);\n    try {\n        return wasm.sha3_512hasher_update(this.ptr, ptr0, len0);\n    } finally {\n        wasm.__wbindgen_free(ptr0, len0 * 1);\n    }\n}\nhex_digest() {\n    const retptr = globalArgumentPtr();\n    wasm.sha3_512hasher_hex_digest(retptr, this.ptr);\n    const mem = getUint32Memory();\n    const ptr = mem[retptr / 4];\n    const len = mem[retptr / 4 + 1];\n    const realRet = getStringFromWasm(ptr, len).slice();\n    wasm.__wbindgen_free(ptr, len * 1);\n    return realRet;\n}\n}\n\nlet slab = [];\n\nlet slab_next = 0;\n\nfunction addHeapObject(obj) {\n    if (slab_next === slab.length)\n        slab.push(slab.length + 1);\n    const idx = slab_next;\n    const next = slab[idx];\n\n    slab_next = next;\n\n    slab[idx] = { obj, cnt: 1 };\n    return idx << 1;\n}\n\nlet stack = [];\n\nfunction getObject(idx) {\n    if ((idx & 1) === 1) {\n        return stack[idx >> 1];\n    } else {\n        const val = slab[idx >> 1];\n\n    return val.obj;\n\n    }\n}\n\nexport function __wbindgen_object_clone_ref(idx) {\n    // If this object is on the stack promote it to the heap.\n    if ((idx & 1) === 1)\n        return addHeapObject(getObject(idx));\n\n    // Otherwise if the object is on the heap just bump the\n    // refcount and move on\n    const val = slab[idx >> 1];\n    val.cnt += 1;\n    return idx;\n}\n\nfunction dropRef(idx) {\n\n    let obj = slab[idx >> 1];\n\n    obj.cnt -= 1;\n    if (obj.cnt > 0)\n        return;\n\n    // If we hit 0 then free up our space in the slab\n    slab[idx >> 1] = slab_next;\n    slab_next = idx >> 1;\n}\n\nexport function __wbindgen_object_drop_ref(i) { dropRef(i); }\n\nexport function __wbindgen_string_new(p, l) {\n    return addHeapObject(getStringFromWasm(p, l));\n}\n\nexport function __wbindgen_number_new(i) { return addHeapObject(i); }\n\nexport function __wbindgen_number_get(n, invalid) {\n    let obj = getObject(n);\n    if (typeof(obj) === 'number')\n        return obj;\n    getUint8Memory()[invalid] = 1;\n    return 0;\n}\n\nexport function __wbindgen_undefined_new() { return addHeapObject(undefined); }\n\nexport function __wbindgen_null_new() {\n    return addHeapObject(null);\n}\n\nexport function __wbindgen_is_null(idx) {\n    return getObject(idx) === null ? 1 : 0;\n}\n\nexport function __wbindgen_is_undefined(idx) {\n    return getObject(idx) === undefined ? 1 : 0;\n}\n\nexport function __wbindgen_boolean_new(v) {\n    return addHeapObject(v === 1);\n}\n\nexport function __wbindgen_boolean_get(i) {\n    let v = getObject(i);\n    if (typeof(v) === 'boolean') {\n        return v ? 1 : 0;\n    } else {\n        return 2;\n    }\n}\n\nexport function __wbindgen_symbol_new(ptr, len) {\n    let a;\n    if (ptr === 0) {\n        a = Symbol();\n    } else {\n        a = Symbol(getStringFromWasm(ptr, len));\n    }\n    return addHeapObject(a);\n}\n\nexport function __wbindgen_is_symbol(i) {\n    return typeof(getObject(i)) === 'symbol' ? 1 : 0;\n}\n\nconst TextEncoder = typeof self === 'object' && self.TextEncoder\n    ? self.TextEncoder\n    : require('util').TextEncoder;\n\nlet cachedEncoder = new TextEncoder('utf-8');\n\nfunction passStringToWasm(arg) {\n\n    const buf = cachedEncoder.encode(arg);\n    const ptr = wasm.__wbindgen_malloc(buf.length);\n    getUint8Memory().set(buf, ptr);\n    return [ptr, buf.length];\n}\n\nexport function __wbindgen_string_get(i, len_ptr) {\n    let obj = getObject(i);\n    if (typeof(obj) !== 'string')\n        return 0;\n    const [ptr, len] = passStringToWasm(obj);\n    getUint32Memory()[len_ptr / 4] = len;\n    return ptr;\n}\n\nexport function __wbindgen_throw(ptr, len) {\n    throw new Error(getStringFromWasm(ptr, len));\n}\n\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}"],"sourceRoot":""}